name: schedule-management

services:
  schedule-management-mysql-db:
    container_name: schedule-management-mysql-db
    image: mysql:8.4.6
    ports:
      - '${SCHEDULE_DEV_MYSQL_PORT}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${SCHEDULE_DEV_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${SCHEDULE_DEV_MYSQL_DB_NAME}
    volumes:
      - ./.volumes/mysql/mysql-volume:/var/lib/mysql
    healthcheck:
      test: "mysqladmin ping -u root -p ${SCHEDULE_DEV_MYSQL_PASSWORD}"
    networks:
      - schedule-management-network

  schedule-management-mailhog-smtp:
    container_name: schedule-management-mailhog-smtp
    image: mailhog/mailhog
    ports:
      - '${SCHEDULE_DEV_MAILHOG_API_PORT}:1025'
      - '${SCHEDULE_DEV_MAILHOG_UI_PORT}:8025'
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /home/mailhog
    volumes:
      - ./.volumes/mail/mailhog-volume:/home/mailhog
      - ./.volumes/mail/mailhog.conf:/etc/supervisor/conf.d
      - ./.volumes/mail/mailhog-auth.txt:/etc/mailhog-auth.txt
    networks:
      - schedule-management-network

  schedule-management-minio-s3:
    container_name: schedule-management-minio-s3
    image: bitnami/minio:2023.9.27
    user: root
    ports:
      - '${SCHEDULE_DEV_S3_API_PORT}:9000'
      - '${SCHEDULE_DEV_S3_UI_PORT}:9001'
    environment:
      MINIO_ROOT_USER: ${SCHEDULE_DEV_S3_USERNAME}
      MINIO_ROOT_PASSWORD: ${SCHEDULE_DEV_S3_PASSWORD}
      MINIO_DEFAULT_BUCKETS: profiles:public
      MINIO_SCHEME: http
    volumes:
      - ./.volumes/s3/s3-volume:/bitnami/minio/data
    healthcheck:
      test: 'curl --fail http://localhost:9000/minio/health/live || exit 1'
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - schedule-management-network

  schedule-management-app:
    container_name: schedule-management-app
    ports:
      - '${SCHEDULE_DEV_APP_PORT}:8080'
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
      SCHEDULE_MYSQL_URL: server=schedule-management-mysql-db;port=3306;user=root;password=${SCHEDULE_DEV_MYSQL_PASSWORD};database=${SCHEDULE_DEV_MYSQL_DB_NAME}
      SCHEDULE_CLIENT_ORIGIN: http://localhost:${SCHEDULE_DEV_CLIENT_PORT}
      SCHEDULE_JWT_SECRET: ${SCHEDULE_DEV_JWT_SECRET}
      # smtp server
      SCHEDULE_SMTP_HOST: schedule-management-mailhog-smtp
      SCHEDULE_SMTP_PORT: 1025
      SCHEDULE_SMTP_USERNAME: ${SCHEDULE_DEV_MAILHOG_USERNAME}
      SCHEDULE_SMTP_PASSWORD: ${SCHEDULE_DEV_MAILHOG_PASSWORD}
      SCHEDULE_SMTP_ENABLE_SSH: false
      SCHEDULE_SMTP_EMAIL_DOMAIN: schedule.DOCKER.pl
      # s3
      SCHEDULE_S3_HOST: http://schedule-management-minio-s3:9000
      SCHEDULE_S3_ACCESS_KEY: ${SCHEDULE_DEV_S3_USERNAME}
      SCHEDULE_S3_SECRET_KEY: ${SCHEDULE_DEV_S3_PASSWORD}
      # mailbox management api (ssh)
      SCHEDULE_SSH_ENABLED: ${SCHEDULE_DEV_SSH_ENABLED}
      SCHEDULE_SSH_HOST: ${SCHEDULE_DEV_SSH_HOST}
      SCHEDULE_SSH_LOGIN: ${SCHEDULE_DEV_SSH_LOGIN}
      SCHEDULE_SSH_PASSWORD: ${SCHEDULE_DEV_SSH_PASSWORD}
      SCHEDULE_EMAIL_CAPACITY_MB: ${SCHEDULE_DEV_EMAIL_CAPACITY_MB}
      SCHEDULE_MAILBOX_CREATE_CMD: ${SCHEDULE_DEV_MAILBOX_CREATE_CMD}
      SCHEDULE_MAILBOX_SET_CAPACITY_CMD: ${SCHEDULE_DEV_MAILBOX_SET_CAPACITY_CMD}
      SCHEDULE_MAILBOX_UPDATE_PASSWORD_CMD: ${SCHEDULE_DEV_MAILBOX_UPDATE_PASSWORD_CMD}
      SCHEDULE_MAILBOX_DELETE_CMD: ${SCHEDULE_DEV_MAILBOX_DELETE_CMD}
      # init credentials
      SCHEDULE_INIT_NAME: ${SCHEDULE_DEV_INIT_NAME}
      SCHEDULE_INIT_SURNAME: ${SCHEDULE_DEV_INIT_SURNAME} 
      SCHEDULE_INIT_PASSWORD: ${SCHEDULE_DEV_INIT_PASSWORD}
    depends_on:
      - schedule-management-mysql-db
      - schedule-management-mailhog-smtp
      - schedule-management-minio-s3
    networks:
      - schedule-management-network

networks:
  schedule-management-network:
    driver: bridge
